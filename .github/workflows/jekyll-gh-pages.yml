name: CSE 15L Lab Reports

on:
  push:
    branches: ["master"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache Docker image
        id: cache
        uses: ScribeMD/docker-cache@0.3.7
        with:
          key: docker-${{ runner.os }}-sha256:fe4da1c9e4a415874c764b065f64e14948b2bea620523d712e5482a1402e9997
      - name: Pull Docker image
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          docker pull danteev/texlive:latest
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
      - name: Convert to PDF
        run: |
          find . -type f -name 'lab*.md' | while read file; do
            sudo docker run --rm --volume "$(pwd):/workdir" danteev/texlive pandoc --wrap=auto --from=markdown+rebase_relative_paths -s "$file" -o "$(basename "$file" .md).pdf"
          done
      - name: Upload PDFs
        uses: actions/upload-artifact@v4
        with:
          name: Lab Reports
          path: ./lab*.pdf
          compression-level: 0
      
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
